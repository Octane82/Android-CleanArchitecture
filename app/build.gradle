apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

project.ext {
    daggerVersion = "2.13"
    lifecycle_version = "1.1.1"
    retrofitVersion = "2.4.0"
    okHttpVersion = "3.4.1"
    timberVersion = "4.5.1"

    kotlinCoroutinesVersion = "0.30.1"
    ktxVersion = "1.0.0"

    glideVersion = "4.8.0"

//    supportLibraryVersion = "27.1.1"
//    androidArchVersion = "1.1.1"
//    moxyVersion = "1.5.5"
//    butterKnifeVersion = "8.7.0"
//    rxJavaVersion = "2.1.0"
//    rxAndroidVersion = "2.0.1"
//    timberVersion = "4.5.1"
//    priorityJobQueueVersion = "2.0.1"
//    playServicesVersion = "15.0.1"
//    retrofitVersion = "2.4.0"
//    okHttpVersion = "3.4.1"
//    rxRelayVersion = "2.0.0"
//    rxLintVersion = "1.6"

}


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.everlapp.cleanarch"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"
    // Kotlin KTX
    implementation "androidx.core:core-ktx:$ktxVersion"

    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.core:core:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    // Application dependencies
    // Dagger core
    implementation "com.google.dagger:dagger:$daggerVersion"
    // Dagger Android
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // Architecture components
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"
    kapt 'androidx.lifecycle:lifecycle-compiler:2.0.0'
    // optional - ReactiveStreams support for LiveData
    implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.0.0'
    // optional - Test helpers for LiveData
    testImplementation 'androidx.arch.core:core-testing:2.0.0'

    // Room DbRoom
    implementation 'androidx.room:room-runtime:2.1.0-alpha01'
    implementation 'androidx.room:room-rxjava2:2.1.0-alpha01'
    kapt 'androidx.room:room-compiler:2.1.0-alpha01'


    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    // GSON Converter
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    // Retrofit RxJava2 adapter
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    // OkHttp Logging Interceptor
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Timber logger
    implementation "com.jakewharton.timber:timber:$timberVersion"


    // Test dependencies
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-beta02'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-beta02'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
